<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>backend</artifactId>

  <parent>
    <artifactId>velcom</artifactId>
    <groupId>de.aaaaaaah</groupId>
    <version>0.0</version>
  </parent>

  <properties>
    <db.url>jdbc:sqlite:${project.build.directory}/data.db</db.url>

    <argon2.version>2.7</argon2.version>
    <caffeine.version>2.8.5</caffeine.version>
    <dropwizard.version>2.0.13</dropwizard.version>
    <flyway.version>6.5.5</flyway.version>
    <hikaricp.version>3.4.5</hikaricp.version>
    <jakarta.xml.version>2.3.3</jakarta.xml.version>
    <jetty.version>9.4.31.v20200723</jetty.version>
    <jgit.version>5.5.1.201910021850-r</jgit.version>
    <jooq.version>3.13.4</jooq.version>
    <metainf-services.version>1.8</metainf-services.version>
    <prometheus.version>0.9.0</prometheus.version>
    <sqlite.version>3.32.3.1</sqlite.version>

    <git-commit-id-plugin.version>4.0.0</git-commit-id-plugin.version>
    <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
  </properties>

  <build>
    <plugins>

      <!-- Ensure that the target directory exists so that flyway can connect to ${db.url} -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven-antrun-plugin.version}</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <configuration>
              <target>
                <mkdir dir="${project.build.directory}"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
          <!-- Exclude signatures so java does not try to verify the integrity of dependencies. -->
          <!-- The signatures never match, as we reshade them into our jar file. -->
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
          <transformers>
            <transformer
              implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
              <manifestEntries>
                <Main-Class>de.aaaaaaah.velcom.backend.ServerMain</Main-Class>
              </manifestEntries>
            </transformer>
            <transformer
              implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
          </transformers>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>

      <!-- FLYWAY -->
      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>
        <version>${flyway.version}</version>

        <configuration>
          <url>${db.url}</url>
          <locations>
            <location>filesystem:src/main/resources/db/migration</location>
          </locations>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>migrate</goal>
            </goals>
            <phase>generate-sources</phase>
          </execution>
        </executions>
      </plugin>

      <!-- JOOQ -->
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${jooq.version}</version>

        <configuration>
          <generator>
            <database>
              <includes>.*</includes>
              <!-- Associate data type rewrites with database columns -->
              <forcedTypes>
                <!-- Force SQLITE's Timestamps to be Instants in application code -->
                <forcedType>
                  <name>INSTANT</name>
                  <includeTypes>TIMESTAMP</includeTypes>
                </forcedType>
              </forcedTypes>
            </database>
            <target>
              <directory>target/generated-sources/jooq</directory>
              <packageName>org.jooq.codegen.db</packageName>
            </target>
          </generator>
          <jdbc>
            <url>${db.url}</url>
          </jdbc>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <phase>generate-sources</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Current commit hash available to jars -->
      <!-- When changing this, also change backend/pom.xml and GitProperties.java -->
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>${git-commit-id-plugin.version}</version>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <goals>
              <goal>revision</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
        <configuration>
          <dotGitDirectory>${project.basedir}/../../.git</dotGitDirectory>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
          </generateGitPropertiesFilename>
          <includeOnlyProperties>
            <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
            <includeOnlyProperty>^git.commit.id.(abbrev|full)$</includeOnlyProperty>
          </includeOnlyProperties>
          <commitIdGenerationMode>full</commitIdGenerationMode>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <repositories>
    <repository>
      <id>local-file-repo</id>
      <url>file://internal-file-repo</url>
    </repository>
  </repositories>

  <dependencies>

    <dependency>
      <artifactId>dropwizard-core</artifactId>
      <groupId>io.dropwizard</groupId>
      <version>${dropwizard.version}</version>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-auth</artifactId>
      <version>${dropwizard.version}</version>
    </dependency>

    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_dropwizard</artifactId>
      <version>${prometheus.version}</version>
    </dependency>

    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient</artifactId>
      <version>${prometheus.version}</version>
    </dependency>
    <dependency>
      <groupId>io.prometheus</groupId>
      <artifactId>simpleclient_servlet</artifactId>
      <version>${prometheus.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.kohsuke.metainf-services/metainf-services -->
    <dependency>
      <groupId>org.kohsuke.metainf-services</groupId>
      <artifactId>metainf-services</artifactId>
      <version>${metainf-services.version}</version>
      <scope>provided</scope>
    </dependency>


    <!--NEEDED FOR DROPWIZARD (NO LONGER INCLUDED IN THE JDK)-->
    <dependency>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <groupId>jakarta.xml.bind</groupId>
      <version>${jakarta.xml.version}</version>
    </dependency>
    <dependency>
      <artifactId>jaxb-runtime</artifactId>
      <groupId>org.glassfish.jaxb</groupId>
      <version>${jakarta.xml.version}</version>
    </dependency>

    <dependency>
      <artifactId>websocket-api</artifactId>
      <groupId>org.eclipse.jetty.websocket</groupId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <artifactId>websocket-server</artifactId>
      <groupId>org.eclipse.jetty.websocket</groupId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <artifactId>jetty-util</artifactId>
      <groupId>org.eclipse.jetty</groupId>
      <version>${jetty.version}</version>
    </dependency>

    <dependency>
      <artifactId>shared</artifactId>
      <groupId>de.aaaaaaah</groupId>
      <version>0.0</version>
    </dependency>

    <dependency>
      <artifactId>junit-jupiter-api</artifactId>
      <groupId>org.junit.jupiter</groupId>
    </dependency>
    <dependency>
      <artifactId>junit-jupiter-engine</artifactId>
      <groupId>org.junit.jupiter</groupId>
    </dependency>
    <dependency>
      <artifactId>junit-jupiter-params</artifactId>
      <groupId>org.junit.jupiter</groupId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
    </dependency>


    <!-- https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit -->
    <dependency>
      <artifactId>org.eclipse.jgit</artifactId>
      <groupId>org.eclipse.jgit</groupId>
      <version>${jgit.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit.ssh.apache -->
    <dependency>
      <groupId>org.eclipse.jgit</groupId>
      <artifactId>org.eclipse.jgit.ssh.apache</artifactId>
      <version>${jgit.version}</version>
    </dependency>


    <!-- database dependencies -->

    <!-- https://mvnrepository.com/artifact/org.jooq/jooq -->
    <dependency>
      <artifactId>jooq</artifactId>
      <groupId>org.jooq</groupId>
      <version>${jooq.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.jooq/jooq-codegen -->
    <dependency>
      <artifactId>jooq-codegen</artifactId>
      <groupId>org.jooq</groupId>
      <version>${jooq.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.jooq/jooq-meta -->
    <dependency>
      <artifactId>jooq-meta</artifactId>
      <groupId>org.jooq</groupId>
      <version>${jooq.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc -->
    <dependency>
      <artifactId>sqlite-jdbc</artifactId>
      <groupId>org.xerial</groupId>
      <version>${sqlite.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP -->
    <dependency>
      <artifactId>HikariCP</artifactId>
      <groupId>com.zaxxer</groupId>
      <version>${hikaricp.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.flywaydb/flyway-core -->
    <dependency>
      <artifactId>flyway-core</artifactId>
      <groupId>org.flywaydb</groupId>
      <version>${flyway.version}</version>
    </dependency>

    <!-- misc dependencies -->
    <!-- https://mvnrepository.com/artifact/de.mkammerer/argon2-jvm -->
    <dependency>
      <artifactId>argon2-jvm</artifactId>
      <groupId>de.mkammerer</groupId>
      <version>${argon2.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-compress -->
    <dependency>
      <artifactId>commons-compress</artifactId>
      <groupId>org.apache.commons</groupId>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.github.ben-manes.caffeine/caffeine -->
    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
      <version>${caffeine.version}</version>
    </dependency>
  </dependencies>

</project>
