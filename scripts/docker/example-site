# This is a sample nginx site config for VelCom.

###### Frontend ######
# Important properties:
#   1. Must serve the "dist" frontend folder
#   2. Must serve the "index.html" as the index file
#   3. Must redirect all URLs that do not exist in the dist folder to the
#      index.html (except for /Impressum.html, which you may redefine if
#                  you want)
# Inlined backend on same port:
#   1. Must proxy pass all requests to the backend
server {
   # Property 1: Ensure the frontend folder is served.
   # "/home/velcom/frontend" is the "dist" folder of the frontend
   root "/home/velcom/frontend";
   # Property 2: Serve index.html as index file
   index index.html;

   # Base entry for the browser so on port 80
   listen 80;

   location / {
      # Property 3: Serve "index.html" for all unknown paths
      try_files $uri $uri/ /index.html =404;
   }

   ###### Backend ######
   # Important properties:
   #   1. Must proxy pass all requests to the backend

   # Property 1: Proxy pass all requests to the backend
   # Notice the trailing '/'! See the 'proxy_pass' directive below for
   # information.
   location /api/ {
      proxy_set_header        Host $host:$server_port;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;
      proxy_set_header        X-Forwarded-Host $host;

      # Backend is running at port 9001 in our example
      # The trailing '/' is REQUIRED as otherwise nginx does not replace the
      # '/api/' part in the url. This leads to a 404 as the backend does not
      # know the path '/api/<url>' or '//<url>' (if you do not have a trailing
      # slash at the end of the location block)
      proxy_pass              http://127.0.0.1:9001/;
   }
}

###### Runner connection port ######
# Important properties:
#   1. Must proxy pass all requests to the backend's runner port
#   2. MUST preserve or set the following headers for Websocket handshakes
#       Upgrade: Preserve sent header
#       Connection: Set to the string "upgrade"
server {
   location / {
      # Property 2: Preserve headers so Websocket connections are preserved
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      # Property 1: Proxy all requests to the runner port (3546 here)
      proxy_pass              http://127.0.0.1:3546;
   }

   listen 82;
}
